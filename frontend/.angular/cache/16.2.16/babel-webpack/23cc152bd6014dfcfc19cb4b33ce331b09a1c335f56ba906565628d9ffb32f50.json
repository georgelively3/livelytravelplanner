{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class PersonaService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = 'http://localhost:8080/api';\n  }\n  // Get all traveler profiles (base profiles)\n  getTravelerProfiles() {\n    return this.http.get(`${this.apiUrl}/profiles`, {\n      headers: this.authService.getAuthHeaders()\n    });\n  }\n  // Get user's personas\n  getUserPersonas() {\n    return this.http.get(`${this.apiUrl}/personas`, {\n      headers: this.authService.getAuthHeaders()\n    });\n  }\n  // Create new persona\n  createPersona(personaData) {\n    return this.http.post(`${this.apiUrl}/personas`, personaData, {\n      headers: this.authService.getAuthHeaders()\n    });\n  }\n  // Get specific persona\n  getPersona(id) {\n    return this.http.get(`${this.apiUrl}/personas/${id}`, {\n      headers: this.authService.getAuthHeaders()\n    });\n  }\n  // Update persona\n  updatePersona(id, personaData) {\n    return this.http.put(`${this.apiUrl}/personas/${id}`, personaData, {\n      headers: this.authService.getAuthHeaders()\n    });\n  }\n  static {\n    this.ɵfac = function PersonaService_Factory(t) {\n      return new (t || PersonaService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PersonaService,\n      factory: PersonaService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["PersonaService","constructor","http","authService","apiUrl","getTravelerProfiles","get","headers","getAuthHeaders","getUserPersonas","createPersona","personaData","post","getPersona","id","updatePersona","put","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\georg\\LitheSpeed Dropbox\\George Lively\\lithespeed code\\livelytravelplanner2\\frontend\\src\\app\\services\\persona.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\nexport interface TravelerProfile {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport interface UserPersona {\r\n  id: number;\r\n  baseProfileId: number;\r\n  baseProfileName: string;\r\n  baseProfileDescription: string;\r\n  personalPreferences: string;\r\n  constraints: string;\r\n  budgetDetails: string;\r\n  accessibilityNeeds: string;\r\n  groupDynamics: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface UserPersonaRequest {\r\n  baseProfileId: number;\r\n  personalPreferences?: string;\r\n  constraints?: string;\r\n  budgetDetails?: string;\r\n  accessibilityNeeds?: string;\r\n  groupDynamics?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonaService {\r\n  private apiUrl = 'http://localhost:8080/api';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  // Get all traveler profiles (base profiles)\r\n  getTravelerProfiles(): Observable<{profiles: TravelerProfile[]}> {\r\n    return this.http.get<{profiles: TravelerProfile[]}>(`${this.apiUrl}/profiles`, {\r\n      headers: this.authService.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  // Get user's personas\r\n  getUserPersonas(): Observable<{personas: UserPersona[]}> {\r\n    return this.http.get<{personas: UserPersona[]}>(`${this.apiUrl}/personas`, {\r\n      headers: this.authService.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  // Create new persona\r\n  createPersona(personaData: UserPersonaRequest): Observable<{message: string, persona: UserPersona}> {\r\n    return this.http.post<{message: string, persona: UserPersona}>(`${this.apiUrl}/personas`, personaData, {\r\n      headers: this.authService.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  // Get specific persona\r\n  getPersona(id: number): Observable<{persona: UserPersona}> {\r\n    return this.http.get<{persona: UserPersona}>(`${this.apiUrl}/personas/${id}`, {\r\n      headers: this.authService.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  // Update persona\r\n  updatePersona(id: number, personaData: Partial<UserPersonaRequest>): Observable<{message: string, persona: UserPersona}> {\r\n    return this.http.put<{message: string, persona: UserPersona}>(`${this.apiUrl}/personas/${id}`, personaData, {\r\n      headers: this.authService.getAuthHeaders()\r\n    });\r\n  }\r\n}"],"mappings":";;;AAsCA,OAAM,MAAOA,cAAc;EAGzBC,YACUC,IAAgB,EAChBC,WAAwB;IADxB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,WAAW,GAAXA,WAAW;IAJb,KAAAC,MAAM,GAAG,2BAA2B;EAKzC;EAEH;EACAC,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAgC,GAAG,IAAI,CAACF,MAAM,WAAW,EAAE;MAC7EG,OAAO,EAAE,IAAI,CAACJ,WAAW,CAACK,cAAc;KACzC,CAAC;EACJ;EAEA;EACAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAA4B,GAAG,IAAI,CAACF,MAAM,WAAW,EAAE;MACzEG,OAAO,EAAE,IAAI,CAACJ,WAAW,CAACK,cAAc;KACzC,CAAC;EACJ;EAEA;EACAE,aAAaA,CAACC,WAA+B;IAC3C,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAA0C,GAAG,IAAI,CAACR,MAAM,WAAW,EAAEO,WAAW,EAAE;MACrGJ,OAAO,EAAE,IAAI,CAACJ,WAAW,CAACK,cAAc;KACzC,CAAC;EACJ;EAEA;EACAK,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACZ,IAAI,CAACI,GAAG,CAAyB,GAAG,IAAI,CAACF,MAAM,aAAaU,EAAE,EAAE,EAAE;MAC5EP,OAAO,EAAE,IAAI,CAACJ,WAAW,CAACK,cAAc;KACzC,CAAC;EACJ;EAEA;EACAO,aAAaA,CAACD,EAAU,EAAEH,WAAwC;IAChE,OAAO,IAAI,CAACT,IAAI,CAACc,GAAG,CAA0C,GAAG,IAAI,CAACZ,MAAM,aAAaU,EAAE,EAAE,EAAEH,WAAW,EAAE;MAC1GJ,OAAO,EAAE,IAAI,CAACJ,WAAW,CAACK,cAAc;KACzC,CAAC;EACJ;;;uBAzCWR,cAAc,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAdtB,cAAc;MAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}