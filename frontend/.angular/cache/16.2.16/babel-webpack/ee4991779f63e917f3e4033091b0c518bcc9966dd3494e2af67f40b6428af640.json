{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TripService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/trips';\n  }\n  getAllTrips() {\n    return this.http.get(this.apiUrl);\n  }\n  getTripById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createTrip(trip) {\n    return this.http.post(this.apiUrl, trip);\n  }\n  updateTrip(id, trip) {\n    return this.http.put(`${this.apiUrl}/${id}`, trip);\n  }\n  deleteTrip(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  searchTrips(destination) {\n    return this.http.get(`${this.apiUrl}/search?destination=${destination}`);\n  }\n  getUpcomingTrips() {\n    return this.http.get(`${this.apiUrl}/upcoming`);\n  }\n  static {\n    this.ɵfac = function TripService_Factory(t) {\n      return new (t || TripService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TripService,\n      factory: TripService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TripService","constructor","http","apiUrl","getAllTrips","get","getTripById","id","createTrip","trip","post","updateTrip","put","deleteTrip","delete","searchTrips","destination","getUpcomingTrips","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\georg\\LitheSpeed Dropbox\\George Lively\\lithespeed code\\livelytravelplanner2\\frontend\\src\\app\\services\\trip.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Trip {\r\n  id?: number;\r\n  name: string;\r\n  description?: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  destination?: string;\r\n  createdAt?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TripService {\r\n  private apiUrl = 'http://localhost:8080/api/trips';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllTrips(): Observable<Trip[]> {\r\n    return this.http.get<Trip[]>(this.apiUrl);\r\n  }\r\n\r\n  getTripById(id: number): Observable<Trip> {\r\n    return this.http.get<Trip>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createTrip(trip: Trip): Observable<Trip> {\r\n    return this.http.post<Trip>(this.apiUrl, trip);\r\n  }\r\n\r\n  updateTrip(id: number, trip: Trip): Observable<Trip> {\r\n    return this.http.put<Trip>(`${this.apiUrl}/${id}`, trip);\r\n  }\r\n\r\n  deleteTrip(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  searchTrips(destination: string): Observable<Trip[]> {\r\n    return this.http.get<Trip[]>(`${this.apiUrl}/search?destination=${destination}`);\r\n  }\r\n\r\n  getUpcomingTrips(): Observable<Trip[]> {\r\n    return this.http.get<Trip[]>(`${this.apiUrl}/upcoming`);\r\n  }\r\n}"],"mappings":";;AAiBA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC;EAEV;EAExCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,MAAM,CAAC;EAC3C;EAEAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACpD;EAEAC,UAAUA,CAACC,IAAU;IACnB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,IAAI,CAACP,MAAM,EAAEM,IAAI,CAAC;EAChD;EAEAE,UAAUA,CAACJ,EAAU,EAAEE,IAAU;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC1D;EAEAI,UAAUA,CAACN,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAQ,WAAWA,CAACC,WAAmB;IAC7B,OAAO,IAAI,CAACd,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,uBAAuBa,WAAW,EAAE,CAAC;EAClF;EAEAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACf,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,WAAW,CAAC;EACzD;;;uBA/BWH,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXrB,WAAW;MAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}